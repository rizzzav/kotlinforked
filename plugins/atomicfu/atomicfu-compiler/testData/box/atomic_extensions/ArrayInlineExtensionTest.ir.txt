FILE fqName:<root> fileName:/ArrayInlineExtensionTest.kt
  CLASS CLASS name:AtomicBooleanArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.AtomicBooleanArrayInlineExtensionTest
    PROPERTY name:booleanArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:booleanArr type:kotlinx.atomicfu.AtomicBooleanArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBooleanArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-booleanArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicBooleanArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicBooleanArrayInlineExtensionTest
        correspondingProperty: PROPERTY name:booleanArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:booleanArr type:kotlinx.atomicfu.AtomicBooleanArray visibility:private [final]' type=kotlinx.atomicfu.AtomicBooleanArray origin=null
              receiver: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.<get-booleanArr>' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.AtomicBooleanArrayInlineExtensionTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AtomicBooleanArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:casLoop visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicBooleanArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Boolean
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicBoolean, action: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoop' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                        ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoop' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                        ARG index: CONST Int type=kotlin.Int value=0
                      ARG expect: GET_VAR 'cur: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoop.<anonymous>' type=kotlin.Boolean origin=null
                      ARG update: GET_VAR 'to: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoop' type=kotlin.Boolean origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoop' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=0
    FUN name:casLoopExpression visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicBooleanArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Boolean
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicBoolean, action: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=3
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
                BLOCK_BODY
                  WHEN type=kotlin.Unit origin=IF
                    BRANCH
                      if: CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=3
                        ARG expect: GET_VAR 'cur: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoopExpression.<anonymous>' type=kotlin.Boolean origin=null
                        ARG update: GET_VAR 'to: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoopExpression' type=kotlin.Boolean origin=null
                      then: RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest'
                        CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=3
    FUN name:extensionLoop visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicBooleanArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicBoolean
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Boolean
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicBoolean, action: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoop.<anonymous>' type=kotlin.Boolean origin=null
                      ARG update: GET_VAR 'to: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoop' type=kotlin.Boolean origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopExpression visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicBooleanArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicBoolean
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Boolean
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicBoolean, action: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
                BLOCK_BODY
                  CALL 'public final fun lazySet (value: kotlin.Boolean): kotlin.Unit declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
                    ARG value: CONST Boolean type=kotlin.Boolean value=false
                  RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest'
                    WHEN type=kotlin.Boolean origin=IF
                      BRANCH
                        if: CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
                          ARG expect: GET_VAR 'cur: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopExpression.<anonymous>' type=kotlin.Boolean origin=null
                          ARG update: GET_VAR 'to: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopExpression' type=kotlin.Boolean origin=null
                        then: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCL
                          ARG <this>: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopMixedReceivers visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicBooleanArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicBoolean
      VALUE_PARAMETER kind:Regular name:first index:2 type:kotlin.Boolean
      VALUE_PARAMETER kind:Regular name:second index:3 type:kotlin.Boolean
      VALUE_PARAMETER kind:Regular name:index index:4 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicBoolean, action: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers.<anonymous>' type=kotlin.Boolean origin=null
                    ARG update: GET_VAR 'first: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Boolean origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
                    ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                      ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:0): <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                      ARG index: GET_VAR 'index: kotlin.Int declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                    ARG expect: GET_VAR 'first: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Boolean origin=null
                    ARG update: GET_VAR 'second: kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Boolean origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicBoolean, first: kotlin.Boolean, second: kotlin.Boolean, index: kotlin.Int): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest'
                  CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicBoolean declared in <root>.AtomicBooleanArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
    FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicBooleanArrayInlineExtensionTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Boolean
          ARG expected: CONST Boolean type=kotlin.Boolean value=true
          ARG actual: CALL 'private final fun casLoop (to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Boolean type=kotlin.Boolean value=true
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Boolean
          ARG expected: CONST Boolean type=kotlin.Boolean value=true
          ARG actual: CALL 'private final fun casLoopExpression (to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Boolean type=kotlin.Boolean value=true
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Boolean
          ARG expected: CONST Boolean type=kotlin.Boolean value=true
          ARG actual: CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlin.Boolean origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Boolean type=kotlin.Boolean value=true
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Boolean
          ARG expected: CONST Boolean type=kotlin.Boolean value=true
          ARG actual: CALL 'private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlin.Boolean origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Boolean type=kotlin.Boolean value=true
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Boolean
          ARG expected: CONST Boolean type=kotlin.Boolean value=false
          ARG actual: CALL 'private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicBoolean, first: kotlin.Boolean, second: kotlin.Boolean, index: kotlin.Int): kotlin.Boolean declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlin.Boolean origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-booleanArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicBooleanArrayInlineExtensionTest declared in <root>.AtomicBooleanArrayInlineExtensionTest.test' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=7
            ARG first: CONST Boolean type=kotlin.Boolean value=true
            ARG second: CONST Boolean type=kotlin.Boolean value=false
            ARG index: CONST Int type=kotlin.Int value=7
  CLASS CLASS name:AtomicIntArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.AtomicIntArrayInlineExtensionTest
    PROPERTY name:intArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:intArr type:kotlinx.atomicfu.AtomicIntArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicIntArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-intArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicIntArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
        correspondingProperty: PROPERTY name:intArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:intArr type:kotlinx.atomicfu.AtomicIntArray visibility:private [final]' type=kotlinx.atomicfu.AtomicIntArray origin=null
              receiver: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.<get-intArr>' type=<root>.AtomicIntArrayInlineExtensionTest origin=null
    PROPERTY name:a visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
            ARG initial: CONST Int type=kotlin.Int value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
        correspondingProperty: PROPERTY name:a visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]' type=kotlinx.atomicfu.AtomicInt origin=null
              receiver: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.<get-a>' type=<root>.AtomicIntArrayInlineExtensionTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.AtomicIntArrayInlineExtensionTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AtomicIntArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:bar visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:delta index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun bar (<this>: kotlinx.atomicfu.AtomicInt, delta: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
          CALL 'private final fun foo (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>(index:0): <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.bar' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.bar' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
            ARG to: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
              ARG <this>: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.bar' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
              ARG other: GET_VAR 'delta: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.bar' type=kotlin.Int origin=null
    FUN name:casLoop visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.casLoop' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                        ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.casLoop' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                        ARG index: CONST Int type=kotlin.Int value=0
                      ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.casLoop.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.casLoop' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.casLoop' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=0
                RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                  CONST Int type=kotlin.Int value=777
    FUN name:casLoopExpression visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=3
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                BLOCK_BODY
                  WHEN type=kotlin.Unit origin=IF
                    BRANCH
                      if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=3
                        ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.casLoopExpression.<anonymous>' type=kotlin.Int origin=null
                        ARG update: GET_VAR 'to: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.casLoopExpression' type=kotlin.Int origin=null
                      then: RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                        CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=3
                  RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                    CONST Int type=kotlin.Int value=777
    FUN name:extensionLoop visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoop.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoop' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                  CONST Int type=kotlin.Int value=777
    FUN name:extensionLoopExpression visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'public final fun lazySet (value: kotlin.Int): kotlin.Unit declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                    ARG value: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                      ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression.<anonymous>' type=kotlin.Int origin=null
                      ARG other: CONST Int type=kotlin.Int value=10
                  RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                    WHEN type=kotlin.Int origin=IF
                      BRANCH
                        if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                          ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression.<anonymous>' type=kotlin.Int origin=null
                          ARG update: GET_VAR 'to: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression' type=kotlin.Int origin=null
                        then: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun incrementAndGet (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopMixedReceivers visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:first index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:second index:3 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:index index:4 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers.<anonymous>' type=kotlin.Int origin=null
                    ARG update: GET_VAR 'first: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                    ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                      ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:0): <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                      ARG index: GET_VAR 'index: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                    ARG expect: GET_VAR 'first: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                    ARG update: GET_VAR 'second: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicInt, first: kotlin.Int, second: kotlin.Int, index: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                  CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopRecursive visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopRecursive.<anonymous>' type=kotlin.Int origin=null
                    ARG update: GET_VAR 'to: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopRecursive' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
                    ARG <this>(index:0): GET_VAR '<this>(index:0): <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopRecursive' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                    ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                      ARG <this>: GET_VAR '<this>(index:0): <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopRecursive' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                    ARG to: CONST Int type=kotlin.Int value=5
                RETURN type=kotlin.Nothing from='private final fun extensionLoopRecursive (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                  CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:foo visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.foo' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.foo' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.foo.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest.foo' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun foo (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                      CONST Int type=kotlin.Int value=777
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: RETURN type=kotlin.Nothing from='private final fun foo (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.AtomicIntArrayInlineExtensionTest.foo' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicIntArrayInlineExtensionTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=5
          ARG actual: CALL 'private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=6
          ARG actual: CALL 'private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=6
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=66
          ARG actual: CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=66
          ARG actual: CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=2
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=77
          ARG actual: CALL 'private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Int type=kotlin.Int value=777
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=99
          ARG actual: CALL 'private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicInt, first: kotlin.Int, second: kotlin.Int, index: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG first: CONST Int type=kotlin.Int value=88
            ARG second: CONST Int type=kotlin.Int value=99
            ARG index: CONST Int type=kotlin.Int value=1
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=100
          ARG actual: CALL 'private final fun extensionLoopRecursive (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Int type=kotlin.Int value=100
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=777
          ARG actual: CALL 'private final fun bar (<this>: kotlinx.atomicfu.AtomicInt, delta: kotlin.Int): kotlin.Int declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicIntArrayInlineExtensionTest declared in <root>.AtomicIntArrayInlineExtensionTest.test' type=<root>.AtomicIntArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG delta: CONST Int type=kotlin.Int value=100
  CLASS CLASS name:AtomicLongArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.AtomicLongArrayInlineExtensionTest
    PROPERTY name:longArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:longArr type:kotlinx.atomicfu.AtomicLongArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLongArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-longArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicLongArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
        correspondingProperty: PROPERTY name:longArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:longArr type:kotlinx.atomicfu.AtomicLongArray visibility:private [final]' type=kotlinx.atomicfu.AtomicLongArray origin=null
              receiver: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.<get-longArr>' type=<root>.AtomicLongArrayInlineExtensionTest origin=null
    PROPERTY name:a visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicLong visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Long): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicLong origin=null
            ARG initial: CONST Long type=kotlin.Long value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicLong
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
        correspondingProperty: PROPERTY name:a visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a> (): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicLong visibility:private [final]' type=kotlinx.atomicfu.AtomicLong origin=null
              receiver: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.<get-a>' type=<root>.AtomicLongArrayInlineExtensionTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.AtomicLongArrayInlineExtensionTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AtomicLongArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:bar visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicLong
      VALUE_PARAMETER kind:Regular name:delta index:2 type:kotlin.Long
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun bar (<this>: kotlinx.atomicfu.AtomicLong, delta: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
          CALL 'private final fun foo (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>(index:0): GET_VAR '<this>(index:0): <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.bar' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.bar' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
            ARG to: CALL 'public final fun plus (other: kotlin.Long): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
              ARG <this>: CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.bar' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
              ARG other: GET_VAR 'delta: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.bar' type=kotlin.Long origin=null
    FUN name:casLoop visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Long
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.casLoop' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                        ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.casLoop' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                        ARG index: CONST Int type=kotlin.Int value=0
                      ARG expect: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.casLoop.<anonymous>' type=kotlin.Long origin=null
                      ARG update: GET_VAR 'to: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.casLoop' type=kotlin.Long origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.casLoop' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=0
                RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                  CONST Long type=kotlin.Long value=777
    FUN name:casLoopExpression visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Long
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=3
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
                BLOCK_BODY
                  WHEN type=kotlin.Unit origin=IF
                    BRANCH
                      if: CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=3
                        ARG expect: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.casLoopExpression.<anonymous>' type=kotlin.Long origin=null
                        ARG update: GET_VAR 'to: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.casLoopExpression' type=kotlin.Long origin=null
                      then: RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                        CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=3
                  RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                    CONST Long type=kotlin.Long value=777
    FUN name:extensionLoop visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicLong
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Long
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoop.<anonymous>' type=kotlin.Long origin=null
                      ARG update: GET_VAR 'to: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoop' type=kotlin.Long origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                  CONST Long type=kotlin.Long value=777
    FUN name:extensionLoopExpression visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicLong
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Long
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
                BLOCK_BODY
                  CALL 'public final fun lazySet (value: kotlin.Long): kotlin.Unit declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                    ARG value: CALL 'public final fun plus (other: kotlin.Long): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
                      ARG <this>: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression.<anonymous>' type=kotlin.Long origin=null
                      ARG other: CONST Long type=kotlin.Long value=10
                  RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                    WHEN type=kotlin.Long origin=IF
                      BRANCH
                        if: CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                          ARG expect: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression.<anonymous>' type=kotlin.Long origin=null
                          ARG update: GET_VAR 'to: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression' type=kotlin.Long origin=null
                        then: CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun incrementAndGet (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopMixedReceivers visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicLong
      VALUE_PARAMETER kind:Regular name:first index:2 type:kotlin.Long
      VALUE_PARAMETER kind:Regular name:second index:3 type:kotlin.Long
      VALUE_PARAMETER kind:Regular name:index index:4 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers.<anonymous>' type=kotlin.Long origin=null
                    ARG update: GET_VAR 'first: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Long origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                    ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                      ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:0): <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                      ARG index: GET_VAR 'index: kotlin.Int declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                    ARG expect: GET_VAR 'first: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Long origin=null
                    ARG update: GET_VAR 'second: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Long origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicLong, first: kotlin.Long, second: kotlin.Long, index: kotlin.Int): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                  CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopRecursive visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicLong
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Long
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopRecursive.<anonymous>' type=kotlin.Long origin=null
                    ARG update: GET_VAR 'to: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopRecursive' type=kotlin.Long origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
                    ARG <this>(index:0): GET_VAR '<this>(index:0): <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopRecursive' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                    ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLong origin=GET_PROPERTY
                      ARG <this>: GET_VAR '<this>(index:0): <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopRecursive' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                    ARG to: CONST Long type=kotlin.Long value=5
                RETURN type=kotlin.Nothing from='private final fun extensionLoopRecursive (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                  CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
    FUN name:foo visibility:private modality:FINAL returnType:kotlin.Long [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicLong
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Long
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.foo' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.foo' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.foo.<anonymous>' type=kotlin.Long origin=null
                      ARG update: GET_VAR 'to: kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest.foo' type=kotlin.Long origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun foo (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                      CONST Long type=kotlin.Long value=777
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: RETURN type=kotlin.Nothing from='private final fun foo (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicLongArrayInlineExtensionTest.foo' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
    FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicLongArrayInlineExtensionTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=5
          ARG actual: CALL 'private final fun casLoop (to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Long type=kotlin.Long value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=6
          ARG actual: CALL 'private final fun casLoopExpression (to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Long type=kotlin.Long value=6
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=66
          ARG actual: CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Long type=kotlin.Long value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=66
          ARG actual: CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=2
            ARG to: CONST Long type=kotlin.Long value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=77
          ARG actual: CALL 'private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Long type=kotlin.Long value=777
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=99
          ARG actual: CALL 'private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicLong, first: kotlin.Long, second: kotlin.Long, index: kotlin.Int): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG first: CONST Long type=kotlin.Long value=88
            ARG second: CONST Long type=kotlin.Long value=99
            ARG index: CONST Int type=kotlin.Int value=1
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=100
          ARG actual: CALL 'private final fun extensionLoopRecursive (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST Long type=kotlin.Long value=100
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=777
          ARG actual: CALL 'private final fun bar (<this>: kotlinx.atomicfu.AtomicLong, delta: kotlin.Long): kotlin.Long declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Long origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicLongArrayInlineExtensionTest declared in <root>.AtomicLongArrayInlineExtensionTest.test' type=<root>.AtomicLongArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG delta: CONST Long type=kotlin.Long value=100
  CLASS CLASS name:AtomicRefArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.AtomicRefArrayInlineExtensionTest
    PROPERTY name:refArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:refArr type:kotlinx.atomicfu.AtomicArray<kotlin.String?> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomicArrayOfNulls <T> (size: kotlin.Int): kotlinx.atomicfu.AtomicArray<T of kotlinx.atomicfu.atomicArrayOfNulls?> declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=null
            TYPE_ARG T: kotlin.String?
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-refArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicArray<kotlin.String?>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
        correspondingProperty: PROPERTY name:refArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:refArr type:kotlinx.atomicfu.AtomicArray<kotlin.String?> visibility:private [final]' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=null
              receiver: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.<get-refArr>' type=<root>.AtomicRefArrayInlineExtensionTest origin=null
    PROPERTY name:a visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicLong visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Long): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicLong origin=null
            ARG initial: CONST Long type=kotlin.Long value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicLong
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
        correspondingProperty: PROPERTY name:a visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a> (): kotlinx.atomicfu.AtomicLong declared in <root>.AtomicRefArrayInlineExtensionTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicLong visibility:private [final]' type=kotlinx.atomicfu.AtomicLong origin=null
              receiver: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.<get-a>' type=<root>.AtomicRefArrayInlineExtensionTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.AtomicRefArrayInlineExtensionTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AtomicRefArrayInlineExtensionTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:casLoop visibility:private modality:FINAL returnType:kotlin.String? [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.String
      BLOCK_BODY
        CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          TYPE_ARG T: kotlin.String?
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.casLoop' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String?, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String?
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
                        ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.casLoop' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                        ARG index: CONST Int type=kotlin.Int value=0
                      ARG expect: GET_VAR 'cur: kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest.casLoop.<anonymous>' type=kotlin.String? origin=null
                      ARG update: GET_VAR 'to: kotlin.String declared in <root>.AtomicRefArrayInlineExtensionTest.casLoop' type=kotlin.String origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=kotlin.String? origin=GET_PROPERTY
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.casLoop' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=0
    FUN name:casLoopExpression visibility:private modality:FINAL returnType:kotlin.String? [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest'
          CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            TYPE_ARG T: kotlin.String?
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=3
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String?, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String?
                BLOCK_BODY
                  WHEN type=kotlin.Unit origin=IF
                    BRANCH
                      if: CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
                          ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                          ARG index: CONST Int type=kotlin.Int value=3
                        ARG expect: GET_VAR 'cur: kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest.casLoopExpression.<anonymous>' type=kotlin.String? origin=null
                        ARG update: GET_VAR 'to: kotlin.String declared in <root>.AtomicRefArrayInlineExtensionTest.casLoopExpression' type=kotlin.String origin=null
                      then: RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest'
                        CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=kotlin.String? origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.casLoopExpression' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=3
    FUN name:extensionLoop visibility:private modality:FINAL returnType:kotlin.String? [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicRef<kotlin.String?>
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.String
      BLOCK_BODY
        CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          TYPE_ARG T: kotlin.String?
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String?, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String?
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoop.<anonymous>' type=kotlin.String? origin=null
                      ARG update: GET_VAR 'to: kotlin.String declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoop' type=kotlin.String origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String?>, to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest'
                      CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=kotlin.String? origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoop' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                      CONST String type=kotlin.String value="incorrect"
    FUN name:extensionLoopExpression visibility:private modality:FINAL returnType:kotlin.String? [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicRef<kotlin.String?>
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String?>, to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest'
          CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            TYPE_ARG T: kotlin.String?
            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String?, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String?
                BLOCK_BODY
                  CALL 'public final fun lazySet (value: T of kotlinx.atomicfu.AtomicRef): kotlin.Unit declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
                    ARG value: CONST String type=kotlin.String value="aaa"
                  RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String?>, to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest'
                    WHEN type=kotlin.String? origin=IF
                      BRANCH
                        if: CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
                          ARG expect: GET_VAR 'cur: kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopExpression.<anonymous>' type=kotlin.String? origin=null
                          ARG update: GET_VAR 'to: kotlin.String declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopExpression' type=kotlin.String origin=null
                        then: CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=kotlin.String? origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CONST String type=kotlin.String value="CAS_failed"
    FUN name:extensionLoopMixedReceivers visibility:private modality:FINAL returnType:kotlin.String? [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicRef<kotlin.String?>
      VALUE_PARAMETER kind:Regular name:first index:2 type:kotlin.String
      VALUE_PARAMETER kind:Regular name:second index:3 type:kotlin.String
      VALUE_PARAMETER kind:Regular name:index index:4 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          TYPE_ARG T: kotlin.String?
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String?, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String?
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers.<anonymous>' type=kotlin.String? origin=null
                    ARG update: GET_VAR 'first: kotlin.String declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.String origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                    ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
                      ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:0): <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
                      ARG index: GET_VAR 'index: kotlin.Int declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                    ARG expect: GET_VAR 'first: kotlin.String declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.String origin=null
                    ARG update: GET_VAR 'second: kotlin.String declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlin.String origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String?>, first: kotlin.String, second: kotlin.String, index: kotlin.Int): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest'
                  CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=kotlin.String? origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=IMPLICIT_ARGUMENT
    FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AtomicRefArrayInlineExtensionTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String?
          ARG expected: CONST String type=kotlin.String value="aaa"
          ARG actual: CALL 'private final fun casLoop (to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlin.String? origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST String type=kotlin.String value="aaa"
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String?
          ARG expected: CONST String type=kotlin.String value="bbb"
          ARG actual: CALL 'private final fun casLoopExpression (to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlin.String? origin=null
            ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST String type=kotlin.String value="bbb"
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String?
          ARG expected: CONST String type=kotlin.String value="ccc"
          ARG actual: CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String?>, to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlin.String? origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST String type=kotlin.String value="ccc"
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String?
          ARG expected: CONST String type=kotlin.String value="CAS_failed"
          ARG actual: CALL 'private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String?>, to: kotlin.String): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlin.String? origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=1
            ARG to: CONST String type=kotlin.String value="ccc"
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String?
          ARG expected: CONST String type=kotlin.String value="bbb"
          ARG actual: CALL 'private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String?>, first: kotlin.String, second: kotlin.String, index: kotlin.Int): kotlin.String? declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlin.String? origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<kotlin.String?> origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<kotlin.String?> declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlinx.atomicfu.AtomicArray<kotlin.String?> origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.AtomicRefArrayInlineExtensionTest declared in <root>.AtomicRefArrayInlineExtensionTest.test' type=<root>.AtomicRefArrayInlineExtensionTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=7
            ARG first: CONST String type=kotlin.String value="aaa"
            ARG second: CONST String type=kotlin.String value="bbb"
            ARG index: CONST Int type=kotlin.Int value=7
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      CALL 'public final fun test (): kotlin.Unit declared in <root>.AtomicIntArrayInlineExtensionTest' type=kotlin.Unit origin=null
        ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.AtomicIntArrayInlineExtensionTest' type=<root>.AtomicIntArrayInlineExtensionTest origin=null
      CALL 'public final fun test (): kotlin.Unit declared in <root>.AtomicLongArrayInlineExtensionTest' type=kotlin.Unit origin=null
        ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.AtomicLongArrayInlineExtensionTest' type=<root>.AtomicLongArrayInlineExtensionTest origin=null
      CALL 'public final fun test (): kotlin.Unit declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=kotlin.Unit origin=null
        ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.AtomicBooleanArrayInlineExtensionTest' type=<root>.AtomicBooleanArrayInlineExtensionTest origin=null
      CALL 'public final fun test (): kotlin.Unit declared in <root>.AtomicRefArrayInlineExtensionTest' type=kotlin.Unit origin=null
        ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.AtomicRefArrayInlineExtensionTest' type=<root>.AtomicRefArrayInlineExtensionTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
