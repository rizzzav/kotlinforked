FILE fqName:<root> fileName:/ComplexLoopTest.kt
  CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LoopTest
    PROPERTY name:a visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
            ARG initial: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:a visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]' type=kotlinx.atomicfu.AtomicInt origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-a>' type=<root>.LoopTest origin=null
    PROPERTY name:b visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:b type:kotlinx.atomicfu.AtomicInt visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
            ARG initial: CONST Int type=kotlin.Int value=11
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:b visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-b> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlinx.atomicfu.AtomicInt visibility:private [final]' type=kotlinx.atomicfu.AtomicInt origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-b>' type=<root>.LoopTest origin=null
    PROPERTY name:c visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:c type:kotlinx.atomicfu.AtomicInt visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
            ARG initial: CONST Int type=kotlin.Int value=12
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-c> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:c visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-c> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:c type:kotlinx.atomicfu.AtomicInt visibility:private [final]' type=kotlinx.atomicfu.AtomicInt origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-c>' type=<root>.LoopTest origin=null
    PROPERTY name:r visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:r type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic <T> (initial: T of kotlinx.atomicfu.atomic): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.atomic> declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
            TYPE_ARG T: kotlin.String
            ARG initial: CONST String type=kotlin.String value="aaa"
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-r> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicRef<kotlin.String>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:r visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-r> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:r type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final]' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-r>' type=<root>.LoopTest origin=null
    PROPERTY name:intArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:intArr type:kotlinx.atomicfu.AtomicIntArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicIntArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-intArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicIntArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:intArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:intArr type:kotlinx.atomicfu.AtomicIntArray visibility:private [final]' type=kotlinx.atomicfu.AtomicIntArray origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-intArr>' type=<root>.LoopTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.LoopTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:embeddedLoops visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun embeddedLoops (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:aValue index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
                    ARG <this>: CALL 'private final fun <get-b> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                      ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                    ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:bValue index:0 type:kotlin.Int
                        BLOCK_BODY
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                                ARG <this>: CALL 'private final fun <get-b> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                                  ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                                ARG expect: GET_VAR 'bValue: kotlin.Int declared in <root>.LoopTest.embeddedLoops.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                                ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.embeddedLoops' type=kotlin.Int origin=null
                              then: RETURN type=kotlin.Nothing from='private final fun embeddedLoops (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                                CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                                  ARG <this>: GET_VAR 'aValue: kotlin.Int declared in <root>.LoopTest.embeddedLoops.<anonymous>' type=kotlin.Int origin=null
                                  ARG other: GET_VAR 'bValue: kotlin.Int declared in <root>.LoopTest.embeddedLoops.<anonymous>.<anonymous>' type=kotlin.Int origin=null
    FUN name:embeddedUpdate visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun embeddedUpdate (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:aValue index:0 type:kotlin.Int
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'aValue: kotlin.Int declared in <root>.LoopTest.embeddedUpdate.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.embeddedUpdate' type=kotlin.Int origin=null
                  RETURN type=kotlin.Nothing from='private final fun embeddedUpdate (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                    CALL 'public final fun updateAndGet (<this>: kotlinx.atomicfu.AtomicInt, function: kotlin.Function1<kotlin.Int, kotlin.Int>): kotlin.Int declared in kotlinx.atomicfu' type=kotlin.Int origin=null
                      ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                      ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Int> origin=LAMBDA
                        FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Int
                          VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                          BLOCK_BODY
                            RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.Int): kotlin.Int declared in <root>.LoopTest.embeddedUpdate.<anonymous>'
                              CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                                ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.embeddedUpdate.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                                ARG other: CONST Int type=kotlin.Int value=100
    FUN name:extensionEmbeddedLoops visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionEmbeddedLoops (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionEmbeddedLoops' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur1 index:0 type:kotlin.Int
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionEmbeddedLoops' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur1: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops' type=kotlin.Int origin=null
                  CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionEmbeddedLoops' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                    ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:cur2 index:0 type:kotlin.Int
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='private final fun extensionEmbeddedLoops (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                            GET_VAR 'cur2: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops.<anonymous>.<anonymous>' type=kotlin.Int origin=null
    FUN name:extesntionEmbeddedRefUpdate visibility:private modality:FINAL returnType:kotlin.String [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicRef<kotlin.String>
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extesntionEmbeddedRefUpdate (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String>, to: kotlin.String): kotlin.String declared in <root>.LoopTest'
          CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.String
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'value: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate.<anonymous>' type=kotlin.String origin=null
                      ARG update: GET_VAR 'to: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate' type=kotlin.String origin=null
                  RETURN type=kotlin.Nothing from='private final fun extesntionEmbeddedRefUpdate (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String>, to: kotlin.String): kotlin.String declared in <root>.LoopTest'
                    CALL 'public final fun updateAndGet <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.updateAndGet>, function: kotlin.Function1<T of kotlinx.atomicfu.updateAndGet, T of kotlinx.atomicfu.updateAndGet>): T of kotlinx.atomicfu.updateAndGet declared in kotlinx.atomicfu' type=kotlin.String origin=null
                      TYPE_ARG T: kotlin.String
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=IMPLICIT_ARGUMENT
                      ARG function: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.String> origin=LAMBDA
                        FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.String
                          VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String
                          BLOCK_BODY
                            RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.String): kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate.<anonymous>'
                              STRING_CONCATENATION type=kotlin.String
                                GET_VAR 'cur: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                CONST String type=kotlin.String value="AAA"
    FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=21
          ARG actual: CALL 'private final fun embeddedLoops (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=12
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=77
          ARG actual: CALL 'private final fun extensionEmbeddedLoops (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'private final fun <get-c> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=77
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=66
          ARG actual: CALL 'private final fun extensionEmbeddedLoops (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=0
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=166
          ARG actual: CALL 'private final fun embeddedUpdate (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String
          ARG expected: CONST String type=kotlin.String value="bbbAAA"
          ARG actual: CALL 'private final fun extesntionEmbeddedRefUpdate (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String>, to: kotlin.String): kotlin.String declared in <root>.LoopTest' type=kotlin.String origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'private final fun <get-r> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST String type=kotlin.String value="bbb"
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LoopTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LoopTest' type=<root>.LoopTest origin=null
      CALL 'public final fun test (): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LoopTest declared in <root>.box' type=<root>.LoopTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
