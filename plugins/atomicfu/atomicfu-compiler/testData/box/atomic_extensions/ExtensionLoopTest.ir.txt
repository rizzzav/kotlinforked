FILE fqName:<root> fileName:/ExtensionLoopTest.kt
  PROPERTY name:a visibility:private modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
          ARG initial: CONST Int type=kotlin.Int value=10
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
      correspondingProperty: PROPERTY name:a visibility:private modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final,static]' type=kotlinx.atomicfu.AtomicInt origin=null
  PROPERTY name:b visibility:private modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:b type:kotlinx.atomicfu.AtomicBoolean visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun atomic (initial: kotlin.Boolean): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicBoolean origin=null
          ARG initial: CONST Boolean type=kotlin.Boolean value=false
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicBoolean
      correspondingProperty: PROPERTY name:b visibility:private modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-b> (): kotlinx.atomicfu.AtomicBoolean declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlinx.atomicfu.AtomicBoolean visibility:private [final,static]' type=kotlinx.atomicfu.AtomicBoolean origin=null
  PROPERTY name:l visibility:private modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:l type:kotlinx.atomicfu.AtomicLong visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun atomic (initial: kotlin.Long): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicLong origin=null
          ARG initial: CONST Long type=kotlin.Long value=10
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-l> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicLong
      correspondingProperty: PROPERTY name:l visibility:private modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-l> (): kotlinx.atomicfu.AtomicLong declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:l type:kotlinx.atomicfu.AtomicLong visibility:private [final,static]' type=kotlinx.atomicfu.AtomicLong origin=null
  PROPERTY name:ref visibility:private modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:ref type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun atomic <T> (initial: T of kotlinx.atomicfu.atomic): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.atomic> declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
          TYPE_ARG T: kotlin.String
          ARG initial: CONST String type=kotlin.String value="aaa"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-ref> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicRef<kotlin.String>
      correspondingProperty: PROPERTY name:ref visibility:private modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-ref> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:ref type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final,static]' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
  CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LoopTest
    PROPERTY name:a visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
            ARG initial: CONST Int type=kotlin.Int value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:a visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]' type=kotlinx.atomicfu.AtomicInt origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-a>' type=<root>.LoopTest origin=null
    PROPERTY name:a1 visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:a1 type:kotlinx.atomicfu.AtomicInt visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
            ARG initial: CONST Int type=kotlin.Int value=1
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a1> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:a1 visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a1> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a1 type:kotlinx.atomicfu.AtomicInt visibility:private [final]' type=kotlinx.atomicfu.AtomicInt origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-a1>' type=<root>.LoopTest origin=null
    PROPERTY name:b visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:b type:kotlinx.atomicfu.AtomicBoolean visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Boolean): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicBoolean origin=null
            ARG initial: CONST Boolean type=kotlin.Boolean value=true
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicBoolean
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:b visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-b> (): kotlinx.atomicfu.AtomicBoolean declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:kotlinx.atomicfu.AtomicBoolean visibility:private [final]' type=kotlinx.atomicfu.AtomicBoolean origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-b>' type=<root>.LoopTest origin=null
    PROPERTY name:l visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:l type:kotlinx.atomicfu.AtomicLong visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Long): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicLong origin=null
            ARG initial: CONST Long type=kotlin.Long value=5000000000
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-l> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicLong
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:l visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-l> (): kotlinx.atomicfu.AtomicLong declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:l type:kotlinx.atomicfu.AtomicLong visibility:private [final]' type=kotlinx.atomicfu.AtomicLong origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-l>' type=<root>.LoopTest origin=null
    PROPERTY name:r visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:r type:kotlinx.atomicfu.AtomicRef<<root>.LoopTest.A> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic <T> (initial: T of kotlinx.atomicfu.atomic): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.atomic> declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicRef<<root>.LoopTest.A> origin=null
            TYPE_ARG T: <root>.LoopTest.A
            ARG initial: CONSTRUCTOR_CALL 'public constructor <init> (s: kotlin.String) declared in <root>.LoopTest.A' type=<root>.LoopTest.A origin=null
              ARG s: CONST String type=kotlin.String value="aaaa"
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-r> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicRef<<root>.LoopTest.A>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:r visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-r> (): kotlinx.atomicfu.AtomicRef<<root>.LoopTest.A> declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:r type:kotlinx.atomicfu.AtomicRef<<root>.LoopTest.A> visibility:private [final]' type=kotlinx.atomicfu.AtomicRef<<root>.LoopTest.A> origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-r>' type=<root>.LoopTest origin=null
    PROPERTY name:rs visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:rs type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic <T> (initial: T of kotlinx.atomicfu.atomic): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.atomic> declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
            TYPE_ARG T: kotlin.String
            ARG initial: CONST String type=kotlin.String value="bbbb"
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-rs> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicRef<kotlin.String>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY name:rs visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-rs> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:rs type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final]' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-rs>' type=<root>.LoopTest origin=null
    CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LoopTest.A
      PROPERTY name:s visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 's: kotlin.String declared in <root>.LoopTest.A.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-s> visibility:public modality:FINAL returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest.A
          correspondingProperty: PROPERTY name:s visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-s> (): kotlin.String declared in <root>.LoopTest.A'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                receiver: GET_VAR '<this>: <root>.LoopTest.A declared in <root>.LoopTest.A.<get-s>' type=<root>.LoopTest.A origin=null
      CONSTRUCTOR visibility:public returnType:<root>.LoopTest.A [primary]
        VALUE_PARAMETER kind:Regular name:s index:0 type:kotlin.String
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
    CONSTRUCTOR visibility:public returnType:<root>.LoopTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:bar visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:delta index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun bar (<this>: kotlinx.atomicfu.AtomicInt, delta: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun foo (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>(index:0): <root>.LoopTest declared in <root>.LoopTest.bar' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.bar' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
            ARG to: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
              ARG <this>: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.bar' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
              ARG other: GET_VAR 'delta: kotlin.Int declared in <root>.LoopTest.bar' type=kotlin.Int origin=null
    FUN name:casLoop visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoop' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoop' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.casLoop.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.casLoop' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoop' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  CONST Int type=kotlin.Int value=777
    FUN name:casLoopExpression visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoopExpression' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                BLOCK_BODY
                  WHEN type=kotlin.Unit origin=IF
                    BRANCH
                      if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoopExpression' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                        ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.casLoopExpression.<anonymous>' type=kotlin.Int origin=null
                        ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.casLoopExpression' type=kotlin.Int origin=null
                      then: RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                        CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoopExpression' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                  RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                    CONST Int type=kotlin.Int value=777
    FUN name:extensionLoop visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoop.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoop' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                RETURN type=kotlin.Nothing from='private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  CONST Int type=kotlin.Int value=777
    FUN name:extensionLoopExpression visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
            ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'public final fun lazySet (value: kotlin.Int): kotlin.Unit declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                    ARG value: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                      ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression.<anonymous>' type=kotlin.Int origin=null
                      ARG other: CONST Int type=kotlin.Int value=10
                  RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                    WHEN type=kotlin.Int origin=IF
                      BRANCH
                        if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                          ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression.<anonymous>' type=kotlin.Int origin=null
                          ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression' type=kotlin.Int origin=null
                        then: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun incrementAndGet (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=null
                          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopExpression' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopMixedReceivers visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:first index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:second index:3 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers.<anonymous>' type=kotlin.Int origin=null
                    ARG update: GET_VAR 'first: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                    ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                      ARG <this>: GET_VAR '<this>(index:0): <root>.LoopTest declared in <root>.LoopTest.extensionLoopMixedReceivers' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'first: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                    ARG update: GET_VAR 'second: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicInt, first: kotlin.Int, second: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopMixedReceivers' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:extensionLoopRecursive visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                    ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive.<anonymous>' type=kotlin.Int origin=null
                    ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
                    ARG <this>(index:0): GET_VAR '<this>(index:0): <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                    ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                      ARG <this>: GET_VAR '<this>(index:0): <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                    ARG to: CONST Int type=kotlin.Int value=5
                RETURN type=kotlin.Nothing from='private final fun extensionLoopRecursive (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.extensionLoopRecursive' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:foo visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:kotlinx.atomicfu.AtomicInt
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.foo' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.foo' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                      ARG expect: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.foo.<anonymous>' type=kotlin.Int origin=null
                      ARG update: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.foo' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun foo (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      CONST Int type=kotlin.Int value=777
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: RETURN type=kotlin.Nothing from='private final fun foo (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: GET_VAR '<this>(index:1): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest.foo' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
    FUN name:testIntExtensionLoops visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=5
          ARG actual: CALL 'private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=6
          ARG actual: CALL 'private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=6
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=66
          ARG actual: CALL 'private final fun extensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=77
          ARG actual: CALL 'private final fun extensionLoopExpression (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=777
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=99
          ARG actual: CALL 'private final fun extensionLoopMixedReceivers (<this>: kotlinx.atomicfu.AtomicInt, first: kotlin.Int, second: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG first: CONST Int type=kotlin.Int value=88
            ARG second: CONST Int type=kotlin.Int value=99
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=5
          ARG actual: CALL 'private final fun extensionLoopRecursive (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=100
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=777
          ARG actual: CALL 'private final fun bar (<this>: kotlinx.atomicfu.AtomicInt, delta: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>(index:0): GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG <this>(index:1): CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LoopTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG delta: CONST Int type=kotlin.Int value=100
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LoopTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LoopTest' type=<root>.LoopTest origin=null
      CALL 'public final fun testIntExtensionLoops (): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LoopTest declared in <root>.box' type=<root>.LoopTest origin=null
      CALL 'public final fun testTopLevelExtensionLoop (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
  FUN name:testTopLevelExtensionLoop visibility:public modality:FINAL returnType:kotlin.Unit
    BLOCK_BODY
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.Int
        ARG expected: CONST Int type=kotlin.Int value=110
        ARG actual: CALL 'private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>' type=kotlin.Int origin=null
          ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
          ARG to: CONST Int type=kotlin.Int value=100
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.Long
        ARG expected: CONST Long type=kotlin.Long value=110
        ARG actual: CALL 'private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>' type=kotlin.Long origin=null
          ARG <this>: CALL 'private final fun <get-l> (): kotlinx.atomicfu.AtomicLong declared in <root>' type=kotlinx.atomicfu.AtomicLong origin=GET_PROPERTY
          ARG to: CONST Long type=kotlin.Long value=100
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.Boolean
        ARG expected: CONST Boolean type=kotlin.Boolean value=true
        ARG actual: CALL 'private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>' type=kotlin.Boolean origin=null
          ARG <this>: CALL 'private final fun <get-b> (): kotlinx.atomicfu.AtomicBoolean declared in <root>' type=kotlinx.atomicfu.AtomicBoolean origin=GET_PROPERTY
          ARG to: CONST Boolean type=kotlin.Boolean value=true
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.String
        ARG expected: CONST String type=kotlin.String value="aaattt"
        ARG actual: CALL 'private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String>, to: kotlin.String): kotlin.String declared in <root>' type=kotlin.String origin=null
          ARG <this>: CALL 'private final fun <get-ref> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=GET_PROPERTY
          ARG to: CONST String type=kotlin.String value="ttt"
  FUN name:topLevelExtensionLoop visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlinx.atomicfu.AtomicBoolean
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>'
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicBoolean, action: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicBoolean declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
              BLOCK_BODY
                CALL 'public final fun lazySet (value: kotlin.Boolean): kotlin.Unit declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicBoolean declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
                  ARG value: GET_VAR 'to: kotlin.Boolean declared in <root>.topLevelExtensionLoop' type=kotlin.Boolean origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicBoolean, to: kotlin.Boolean): kotlin.Boolean declared in <root>'
                  CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicBoolean declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
  FUN name:topLevelExtensionLoop visibility:private modality:FINAL returnType:kotlin.Int [inline]
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlinx.atomicfu.AtomicInt
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>'
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicInt declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                CALL 'public final fun lazySet (value: kotlin.Int): kotlin.Unit declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicInt declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.topLevelExtensionLoop.<anonymous>' type=kotlin.Int origin=null
                    ARG other: GET_VAR 'to: kotlin.Int declared in <root>.topLevelExtensionLoop' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicInt, to: kotlin.Int): kotlin.Int declared in <root>'
                  CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicInt declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicInt origin=IMPLICIT_ARGUMENT
  FUN name:topLevelExtensionLoop visibility:private modality:FINAL returnType:kotlin.Long [inline]
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlinx.atomicfu.AtomicLong
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Long
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>'
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicLong declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                CALL 'public final fun lazySet (value: kotlin.Long): kotlin.Unit declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicLong declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun plus (other: kotlin.Long): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.Long declared in <root>.topLevelExtensionLoop.<anonymous>' type=kotlin.Long origin=null
                    ARG other: GET_VAR 'to: kotlin.Long declared in <root>.topLevelExtensionLoop' type=kotlin.Long origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicLong, to: kotlin.Long): kotlin.Long declared in <root>'
                  CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicLong declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicLong origin=IMPLICIT_ARGUMENT
  FUN name:topLevelExtensionLoop visibility:private modality:FINAL returnType:kotlin.String [inline]
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlinx.atomicfu.AtomicRef<kotlin.String>
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String>, to: kotlin.String): kotlin.String declared in <root>'
        CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          TYPE_ARG T: kotlin.String
          ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=IMPLICIT_ARGUMENT
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String
              BLOCK_BODY
                CALL 'public final fun lazySet (value: T of kotlinx.atomicfu.AtomicRef): kotlin.Unit declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=IMPLICIT_ARGUMENT
                  ARG value: CALL 'public final fun plus (other: kotlin.Any?): kotlin.String declared in kotlin.String' type=kotlin.String origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.String declared in <root>.topLevelExtensionLoop.<anonymous>' type=kotlin.String origin=null
                    ARG other: GET_VAR 'to: kotlin.String declared in <root>.topLevelExtensionLoop' type=kotlin.String origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop (<this>: kotlinx.atomicfu.AtomicRef<kotlin.String>, to: kotlin.String): kotlin.String declared in <root>'
                  CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=kotlin.String origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.topLevelExtensionLoop' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=IMPLICIT_ARGUMENT
