FILE fqName:<root> fileName:/LambdaTest.kt
  CLASS CLASS name:LambdaTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LambdaTest
    PROPERTY name:a visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicInt origin=null
            ARG initial: CONST Int type=kotlin.Int value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-a> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicInt
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LambdaTest
        correspondingProperty: PROPERTY name:a visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LambdaTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:a type:kotlinx.atomicfu.AtomicInt visibility:private [final]' type=kotlinx.atomicfu.AtomicInt origin=null
              receiver: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.<get-a>' type=<root>.LambdaTest origin=null
    PROPERTY name:rs visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:rs type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic <T> (initial: T of kotlinx.atomicfu.atomic): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.atomic> declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
            TYPE_ARG T: kotlin.String
            ARG initial: CONST String type=kotlin.String value="bbbb"
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-rs> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicRef<kotlin.String>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LambdaTest
        correspondingProperty: PROPERTY name:rs visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-rs> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LambdaTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:rs type:kotlinx.atomicfu.AtomicRef<kotlin.String> visibility:private [final]' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=null
              receiver: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.<get-rs>' type=<root>.LambdaTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.LambdaTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LambdaTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:inlineLambda visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LambdaTest
      VALUE_PARAMETER kind:Regular name:arg index:1 type:T of <root>.LambdaTest.inlineLambda
      VALUE_PARAMETER kind:Regular name:block index:2 type:kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit> [crossinline]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun inlineLambda <T> (arg: T of <root>.LambdaTest.inlineLambda, block: kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit>): kotlin.Unit declared in <root>.LambdaTest'
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=kotlin.Unit origin=INVOKE
            ARG <this>: GET_VAR 'block: kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit> declared in <root>.LambdaTest.inlineLambda' type=kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit> origin=VARIABLE_AS_FUNCTION
            ARG p1: GET_VAR 'arg: T of <root>.LambdaTest.inlineLambda declared in <root>.LambdaTest.inlineLambda' type=T of <root>.LambdaTest.inlineLambda origin=null
    FUN name:loopInLambda1 visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LambdaTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun loopInLambda1 (to: kotlin.Int): kotlin.Unit declared in <root>.LambdaTest'
          CALL 'private final fun inlineLambda <T> (arg: T of <root>.LambdaTest.inlineLambda, block: kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit>): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
            TYPE_ARG T: kotlin.Int
            ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda1' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
            ARG arg: GET_VAR 'to: kotlin.Int declared in <root>.LambdaTest.loopInLambda1' type=kotlin.Int origin=null
            ARG block: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:arg index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
                    ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                      ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda1' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                    ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
                        BLOCK_BODY
                          TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                            CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                              ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                                ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda1' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                              ARG expect: GET_VAR 'value: kotlin.Int declared in <root>.LambdaTest.loopInLambda1.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                              ARG update: GET_VAR 'arg: kotlin.Int declared in <root>.LambdaTest.loopInLambda1.<anonymous>' type=kotlin.Int origin=null
                          RETURN type=kotlin.Nothing from='local final fun <anonymous> (arg: kotlin.Int): kotlin.Unit declared in <root>.LambdaTest.loopInLambda1'
                            GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN name:loopInLambda2 visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LambdaTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun loopInLambda2 (to: kotlin.Int): kotlin.Unit declared in <root>.LambdaTest'
          CALL 'private final fun inlineLambda <T> (arg: T of <root>.LambdaTest.inlineLambda, block: kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit>): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
            TYPE_ARG T: kotlin.Int
            ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
            ARG arg: GET_VAR 'to: kotlin.Int declared in <root>.LambdaTest.loopInLambda2' type=kotlin.Int origin=null
            ARG block: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:arg1 index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'private final fun inlineLambda <T> (arg: T of <root>.LambdaTest.inlineLambda, block: kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit>): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
                    TYPE_ARG T: kotlin.Int
                    ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                    ARG arg: GET_VAR 'arg1: kotlin.Int declared in <root>.LambdaTest.loopInLambda2.<anonymous>' type=kotlin.Int origin=null
                    ARG block: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:arg2 index:0 type:kotlin.Int
                        BLOCK_BODY
                          CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
                            ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                                VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
                                BLOCK_BODY
                                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                    CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                                      ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
                                        ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                                      ARG expect: GET_VAR 'value: kotlin.Int declared in <root>.LambdaTest.loopInLambda2.<anonymous>.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                                      ARG update: GET_VAR 'arg2: kotlin.Int declared in <root>.LambdaTest.loopInLambda2.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (arg2: kotlin.Int): kotlin.Unit declared in <root>.LambdaTest.loopInLambda2.<anonymous>'
                                    GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN name:loopInLambda2Ref visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LambdaTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun loopInLambda2Ref (to: kotlin.String): kotlin.Unit declared in <root>.LambdaTest'
          CALL 'private final fun inlineLambda <T> (arg: T of <root>.LambdaTest.inlineLambda, block: kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit>): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
            TYPE_ARG T: kotlin.String
            ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2Ref' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
            ARG arg: GET_VAR 'to: kotlin.String declared in <root>.LambdaTest.loopInLambda2Ref' type=kotlin.String origin=null
            ARG block: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:arg1 index:0 type:kotlin.String
                BLOCK_BODY
                  CALL 'private final fun inlineLambda <T> (arg: T of <root>.LambdaTest.inlineLambda, block: kotlin.Function1<T of <root>.LambdaTest.inlineLambda, kotlin.Unit>): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
                    TYPE_ARG T: kotlin.String
                    ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2Ref' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                    ARG arg: GET_VAR 'arg1: kotlin.String declared in <root>.LambdaTest.loopInLambda2Ref.<anonymous>' type=kotlin.String origin=null
                    ARG block: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:arg2 index:0 type:kotlin.String
                        BLOCK_BODY
                          CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
                            TYPE_ARG T: kotlin.String
                            ARG <this>: CALL 'private final fun <get-rs> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2Ref' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                            ARG action: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
                              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                                VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.String
                                BLOCK_BODY
                                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                    CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                                      ARG <this>: CALL 'private final fun <get-rs> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=GET_PROPERTY
                                        ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.loopInLambda2Ref' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
                                      ARG expect: GET_VAR 'value: kotlin.String declared in <root>.LambdaTest.loopInLambda2Ref.<anonymous>.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                      ARG update: GET_VAR 'arg2: kotlin.String declared in <root>.LambdaTest.loopInLambda2Ref.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (arg2: kotlin.String): kotlin.Unit declared in <root>.LambdaTest.loopInLambda2Ref.<anonymous>'
                                    GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LambdaTest
      BLOCK_BODY
        CALL 'public final fun loopInLambda1 (to: kotlin.Int): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.test' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
          ARG to: CONST Int type=kotlin.Int value=34
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=34
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.test' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
        CALL 'public final fun loopInLambda1 (to: kotlin.Int): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.test' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
          ARG to: CONST Int type=kotlin.Int value=77
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=77
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'private final fun <get-a> (): kotlinx.atomicfu.AtomicInt declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicInt origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.test' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
        CALL 'public final fun loopInLambda2Ref (to: kotlin.String): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.test' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
          ARG to: CONST String type=kotlin.String value="bbb"
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String
          ARG expected: CONST String type=kotlin.String value="bbb"
          ARG actual: CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=kotlin.String origin=GET_PROPERTY
            ARG <this>: CALL 'private final fun <get-rs> (): kotlinx.atomicfu.AtomicRef<kotlin.String> declared in <root>.LambdaTest' type=kotlinx.atomicfu.AtomicRef<kotlin.String> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.LambdaTest declared in <root>.LambdaTest.test' type=<root>.LambdaTest origin=IMPLICIT_ARGUMENT
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LambdaTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LambdaTest' type=<root>.LambdaTest origin=null
      CALL 'public final fun test (): kotlin.Unit declared in <root>.LambdaTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LambdaTest declared in <root>.box' type=<root>.LambdaTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
