FILE fqName:<root> fileName:/LockTest.kt
  CLASS CLASS name:LockTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockTest
    PROPERTY name:inProgressLock visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:inProgressLock type:kotlinx.atomicfu.AtomicBoolean visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomic (initial: kotlin.Boolean): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicBoolean origin=null
            ARG initial: CONST Boolean type=kotlin.Boolean value=false
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-inProgressLock> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicBoolean
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockTest
        correspondingProperty: PROPERTY name:inProgressLock visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-inProgressLock> (): kotlinx.atomicfu.AtomicBoolean declared in <root>.LockTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:inProgressLock type:kotlinx.atomicfu.AtomicBoolean visibility:private [final]' type=kotlinx.atomicfu.AtomicBoolean origin=null
              receiver: GET_VAR '<this>: <root>.LockTest declared in <root>.LockTest.<get-inProgressLock>' type=<root>.LockTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.LockTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LockTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:testLock visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockTest
      BLOCK_BODY
        VAR name:result type:kotlin.String [var]
          CONST String type=kotlin.String value=""
        WHEN type=kotlin.Unit origin=IF
          BRANCH
            if: CALL 'private final fun tryAcquire (<this>: kotlinx.atomicfu.AtomicBoolean): kotlin.Boolean declared in <root>' type=kotlin.Boolean origin=null
              ARG <this>: CALL 'private final fun <get-inProgressLock> (): kotlinx.atomicfu.AtomicBoolean declared in <root>.LockTest' type=kotlinx.atomicfu.AtomicBoolean origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.LockTest declared in <root>.LockTest.testLock' type=<root>.LockTest origin=IMPLICIT_ARGUMENT
            then: BLOCK type=kotlin.Unit origin=null
              SET_VAR 'var result: kotlin.String declared in <root>.LockTest.testLock' type=kotlin.Unit origin=EQ
                CONST String type=kotlin.String value="OK"
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String
          ARG expected: CONST String type=kotlin.String value="OK"
          ARG actual: GET_VAR 'var result: kotlin.String declared in <root>.LockTest.testLock' type=kotlin.String origin=null
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LockTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockTest' type=<root>.LockTest origin=null
      CALL 'public final fun testLock (): kotlin.Unit declared in <root>.LockTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LockTest declared in <root>.box' type=<root>.LockTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
  FUN name:reflectionTest visibility:public modality:FINAL returnType:kotlin.collections.List<BB of <root>.reflectionTest>
    TYPE_PARAMETER name:AA index:0 variance: superTypes:[kotlin.Any?] reified:false
    TYPE_PARAMETER name:BB index:1 variance: superTypes:[kotlin.Number] reified:false
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
    VALUE_PARAMETER kind:Regular name:mapParam index:1 type:kotlin.collections.Map<in AA of <root>.reflectionTest, BB of <root>.reflectionTest>
    annotations:
      Suppress(names = ["UNUSED_PARAMETER"] type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String)
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun reflectionTest <AA, BB> (<this>: kotlin.String, mapParam: kotlin.collections.Map<in AA of <root>.reflectionTest, BB of <root>.reflectionTest>): kotlin.collections.List<BB of <root>.reflectionTest> declared in <root>'
        CALL 'public final fun error (message: kotlin.Any): kotlin.Nothing declared in kotlin' type=kotlin.Nothing origin=null
          ARG message: CONST String type=kotlin.String value="no impl"
  FUN name:tryAcquire visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlinx.atomicfu.AtomicBoolean
    annotations:
      Suppress(names = ["NOTHING_TO_INLINE"] type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String)
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun tryAcquire (<this>: kotlinx.atomicfu.AtomicBoolean): kotlin.Boolean declared in <root>'
        CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
          ARG <this>: GET_VAR '<this>: kotlinx.atomicfu.AtomicBoolean declared in <root>.tryAcquire' type=kotlinx.atomicfu.AtomicBoolean origin=IMPLICIT_ARGUMENT
          ARG expect: CONST Boolean type=kotlin.Boolean value=false
          ARG update: CONST Boolean type=kotlin.Boolean value=true
