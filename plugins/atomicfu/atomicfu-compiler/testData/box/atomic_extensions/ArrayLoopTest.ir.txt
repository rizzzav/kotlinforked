FILE fqName:<root> fileName:/ArrayLoopTest.kt
  CLASS CLASS name:ArrayLoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.ArrayLoopTest
    PROPERTY name:SIZE visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:SIZE type:kotlin.Int visibility:private [final]
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-SIZE> visibility:private modality:FINAL returnType:kotlin.Int
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
        correspondingProperty: PROPERTY name:SIZE visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-SIZE> (): kotlin.Int declared in <root>.ArrayLoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:SIZE type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.<get-SIZE>' type=<root>.ArrayLoopTest origin=null
    PROPERTY name:intArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:intArr type:kotlinx.atomicfu.AtomicIntArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicIntArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-intArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicIntArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
        correspondingProperty: PROPERTY name:intArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:intArr type:kotlinx.atomicfu.AtomicIntArray visibility:private [final]' type=kotlinx.atomicfu.AtomicIntArray origin=null
              receiver: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.<get-intArr>' type=<root>.ArrayLoopTest origin=null
    PROPERTY name:longArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:longArr type:kotlinx.atomicfu.AtomicLongArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLongArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-longArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicLongArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
        correspondingProperty: PROPERTY name:longArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:longArr type:kotlinx.atomicfu.AtomicLongArray visibility:private [final]' type=kotlinx.atomicfu.AtomicLongArray origin=null
              receiver: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.<get-longArr>' type=<root>.ArrayLoopTest origin=null
    PROPERTY name:boolArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:boolArr type:kotlinx.atomicfu.AtomicBooleanArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBooleanArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-boolArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicBooleanArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
        correspondingProperty: PROPERTY name:boolArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:boolArr type:kotlinx.atomicfu.AtomicBooleanArray visibility:private [final]' type=kotlinx.atomicfu.AtomicBooleanArray origin=null
              receiver: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.<get-boolArr>' type=<root>.ArrayLoopTest origin=null
    PROPERTY name:refArr visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:refArr type:kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun atomicArrayOfNulls <T> (size: kotlin.Int): kotlinx.atomicfu.AtomicArray<T of kotlinx.atomicfu.atomicArrayOfNulls?> declared in kotlinx.atomicfu' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=null
            TYPE_ARG T: <root>.ArrayLoopTest.Box?
            ARG size: CONST Int type=kotlin.Int value=10
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-refArr> visibility:private modality:FINAL returnType:kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
        correspondingProperty: PROPERTY name:refArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:refArr type:kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> visibility:private [final]' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=null
              receiver: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.<get-refArr>' type=<root>.ArrayLoopTest origin=null
    CLASS CLASS name:Box modality:FINAL visibility:public superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.ArrayLoopTest.Box
      PROPERTY name:n visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:n type:kotlin.Int visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'n: kotlin.Int declared in <root>.ArrayLoopTest.Box.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-n> visibility:public modality:FINAL returnType:kotlin.Int
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest.Box
          correspondingProperty: PROPERTY name:n visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:n type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                receiver: GET_VAR '<this>: <root>.ArrayLoopTest.Box declared in <root>.ArrayLoopTest.Box.<get-n>' type=<root>.ArrayLoopTest.Box origin=null
      CONSTRUCTOR visibility:public returnType:<root>.ArrayLoopTest.Box [primary]
        VALUE_PARAMETER kind:Regular name:n index:0 type:kotlin.Int
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Box modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
    CONSTRUCTOR visibility:public returnType:<root>.ArrayLoopTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:ArrayLoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:action visibility:private modality:FINAL returnType:<root>.ArrayLoopTest.Box?
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      VALUE_PARAMETER kind:Regular name:cur index:1 type:<root>.ArrayLoopTest.Box?
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun action (cur: <root>.ArrayLoopTest.Box?): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest'
          BLOCK type=<root>.ArrayLoopTest.Box? origin=SAFE_CALL
            VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:<root>.ArrayLoopTest.Box? [val]
              GET_VAR 'cur: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.action' type=<root>.ArrayLoopTest.Box? origin=null
            WHEN type=<root>.ArrayLoopTest.Box? origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  ARG arg0: GET_VAR 'val tmp_0: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.action' type=<root>.ArrayLoopTest.Box? origin=null
                  ARG arg1: CONST Null type=kotlin.Nothing? value=null
                then: CONST Null type=kotlin.Nothing? value=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL 'public final fun let <T, R> (<this>: T of kotlin.let, block: kotlin.Function1<T of kotlin.let, R of kotlin.let>): R of kotlin.let declared in kotlin' type=<root>.ArrayLoopTest.Box origin=null
                  TYPE_ARG T: <root>.ArrayLoopTest.Box
                  TYPE_ARG R: <root>.ArrayLoopTest.Box
                  ARG <this>: GET_VAR 'val tmp_0: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.action' type=<root>.ArrayLoopTest.Box? origin=null
                  ARG block: FUN_EXPR type=kotlin.Function1<<root>.ArrayLoopTest.Box, <root>.ArrayLoopTest.Box> origin=LAMBDA
                    FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:<root>.ArrayLoopTest.Box
                      VALUE_PARAMETER kind:Regular name:it index:0 type:<root>.ArrayLoopTest.Box
                      BLOCK_BODY
                        RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: <root>.ArrayLoopTest.Box): <root>.ArrayLoopTest.Box declared in <root>.ArrayLoopTest.action'
                          CONSTRUCTOR_CALL 'public constructor <init> (n: kotlin.Int) declared in <root>.ArrayLoopTest.Box' type=<root>.ArrayLoopTest.Box origin=null
                            ARG n: CALL 'public final fun times (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=MUL
                              ARG <this>: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
                                ARG <this>: GET_VAR 'cur: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.action' type=<root>.ArrayLoopTest.Box? origin=null
                              ARG other: CONST Int type=kotlin.Int value=10
    FUN name:atomicBooleanArrLoopTest visibility:public modality:FINAL returnType:kotlin.Boolean
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun <set-value> (value: kotlin.Boolean): kotlin.Unit declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG value: CONST Boolean type=kotlin.Boolean value=false
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicBoolean, action: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Boolean
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: WHEN type=kotlin.Boolean origin=ANDAND
                      BRANCH
                        if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCL
                          ARG <this>: GET_VAR 'value: kotlin.Boolean declared in <root>.ArrayLoopTest.atomicBooleanArrLoopTest.<anonymous>' type=kotlin.Boolean origin=null
                        then: CALL 'public final fun compareAndSet (expect: kotlin.Boolean, update: kotlin.Boolean): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=null
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
                          ARG expect: GET_VAR 'value: kotlin.Boolean declared in <root>.ArrayLoopTest.atomicBooleanArrLoopTest.<anonymous>' type=kotlin.Boolean origin=null
                          ARG update: CONST Boolean type=kotlin.Boolean value=true
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CONST Boolean type=kotlin.Boolean value=false
                    then: BLOCK type=kotlin.Unit origin=null
                      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
                        TYPE_ARG T: kotlin.Boolean
                        ARG expected: CONST Boolean type=kotlin.Boolean value=true
                        ARG actual: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
                      RETURN type=kotlin.Nothing from='public final fun atomicBooleanArrLoopTest (): kotlin.Boolean declared in <root>.ArrayLoopTest'
                        CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
    FUN name:atomicBooleanArrUpdateTest visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun atomicBooleanArrLoopTest (): kotlin.Boolean declared in <root>.ArrayLoopTest' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
        CALL 'public final fun update (<this>: kotlinx.atomicfu.AtomicBoolean, function: kotlin.Function1<kotlin.Boolean, kotlin.Boolean>): kotlin.Unit declared in kotlinx.atomicfu' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=5
          ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Boolean> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Boolean
              VALUE_PARAMETER kind:Regular name:it index:0 type:kotlin.Boolean
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.Boolean): kotlin.Boolean declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest'
                  CONST Boolean type=kotlin.Boolean value=true
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Boolean
          ARG expected: CONST Boolean type=kotlin.Boolean value=true
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertFalse (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun updateAndGet (<this>: kotlinx.atomicfu.AtomicBoolean, function: kotlin.Function1<kotlin.Boolean, kotlin.Boolean>): kotlin.Boolean declared in kotlinx.atomicfu' type=kotlin.Boolean origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
            ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Boolean> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Boolean
                VALUE_PARAMETER kind:Regular name:it index:0 type:kotlin.Boolean
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.Boolean): kotlin.Boolean declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest'
                    CONST Boolean type=kotlin.Boolean value=false
        CALL 'public final fun assertFalse (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
        CALL 'public final fun lazySet (value: kotlin.Boolean): kotlin.Unit declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=5
          ARG value: CONST Boolean type=kotlin.Boolean value=false
        CALL 'public final fun assertFalse (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun getAndUpdate (<this>: kotlinx.atomicfu.AtomicBoolean, function: kotlin.Function1<kotlin.Boolean, kotlin.Boolean>): kotlin.Boolean declared in kotlinx.atomicfu' type=kotlin.Boolean origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
            ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Boolean> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Boolean
                VALUE_PARAMETER kind:Regular name:it index:0 type:kotlin.Boolean
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.Boolean): kotlin.Boolean declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest'
                    CONST Boolean type=kotlin.Boolean value=true
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun getAndUpdate (<this>: kotlinx.atomicfu.AtomicBoolean, function: kotlin.Function1<kotlin.Boolean, kotlin.Boolean>): kotlin.Boolean declared in kotlinx.atomicfu' type=kotlin.Boolean origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
            ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Boolean> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Boolean
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
                BLOCK_BODY
                  CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
                    ARG actual: GET_VAR 'cur: kotlin.Boolean declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest.<anonymous>' type=kotlin.Boolean origin=null
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.Boolean): kotlin.Boolean declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest'
                    CONST Boolean type=kotlin.Boolean value=false
        CALL 'public final fun assertFalse (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Boolean declared in kotlinx.atomicfu.AtomicBoolean' type=kotlin.Boolean origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicBoolean declared in kotlinx.atomicfu.AtomicBooleanArray' type=kotlinx.atomicfu.AtomicBoolean origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-boolArr> (): kotlinx.atomicfu.AtomicBooleanArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicBooleanArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicBooleanArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
    FUN name:atomicIntArrLoopTest visibility:public modality:FINAL returnType:kotlin.Int
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun <set-value> (value: kotlin.Int): kotlin.Unit declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG value: CONST Int type=kotlin.Int value=0
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicInt, action: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Int, update: kotlin.Int): kotlin.Boolean declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                        ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                        ARG index: CONST Int type=kotlin.Int value=0
                      ARG expect: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrLoopTest.<anonymous>' type=kotlin.Int origin=null
                      ARG update: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                        ARG <this>: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrLoopTest.<anonymous>' type=kotlin.Int origin=null
                        ARG other: CONST Int type=kotlin.Int value=10
                    then: BLOCK type=kotlin.Unit origin=null
                      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
                        TYPE_ARG T: kotlin.Int
                        ARG expected: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                          ARG <this>: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrLoopTest.<anonymous>' type=kotlin.Int origin=null
                          ARG other: CONST Int type=kotlin.Int value=10
                        ARG actual: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
                      RETURN type=kotlin.Nothing from='public final fun atomicIntArrLoopTest (): kotlin.Int declared in <root>.ArrayLoopTest'
                        CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
    FUN name:atomicIntArrUpdateTest visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=10
          ARG actual: CALL 'public final fun atomicIntArrLoopTest (): kotlin.Int declared in <root>.ArrayLoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
        CALL 'public final fun <set-value> (value: kotlin.Int): kotlin.Unit declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=5
          ARG value: CONST Int type=kotlin.Int value=10
        CALL 'public final fun update (<this>: kotlinx.atomicfu.AtomicInt, function: kotlin.Function1<kotlin.Int, kotlin.Int>): kotlin.Unit declared in kotlinx.atomicfu' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=5
          ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Int> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Int
              VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
              BLOCK_BODY
                VAR name:newValue type:kotlin.Int [val]
                  CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                    ARG <this>: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
                    ARG other: CONST Int type=kotlin.Int value=1000
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (value: kotlin.Int): kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest'
                  WHEN type=kotlin.Int origin=IF
                    BRANCH
                      if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                        ARG arg0: GET_VAR 'val newValue: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
                        ARG arg1: CONST Int type=kotlin.Int value=0
                      then: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Int declared in kotlin.Int.Companion' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Int.Companion
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: GET_VAR 'val newValue: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Int declared in kotlin.Int.Companion' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Int.Companion
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
        CALL 'public final fun <set-value> (value: kotlin.Int): kotlin.Unit declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=6
          ARG value: CONST Int type=kotlin.Int value=10
        VAR name:res1 type:kotlin.Int [val]
          CALL 'public final fun updateAndGet (<this>: kotlinx.atomicfu.AtomicInt, function: kotlin.Function1<kotlin.Int, kotlin.Int>): kotlin.Int declared in kotlinx.atomicfu' type=kotlin.Int origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=6
            ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Int> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Int
                VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (value: kotlin.Int): kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest'
                    WHEN type=kotlin.Int origin=IF
                      BRANCH
                        if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                          ARG arg0: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
                          ARG arg1: CONST Int type=kotlin.Int value=0
                        then: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Int declared in kotlin.Int.Companion' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Int.Companion
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Int declared in kotlin.Int.Companion' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Int.Companion
          ARG actual: GET_VAR 'val res1: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=kotlin.Int origin=null
        CALL 'public final fun lazySet (value: kotlin.Int): kotlin.Unit declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=7
          ARG value: CONST Int type=kotlin.Int value=50
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=50
          ARG actual: CALL 'public final fun getAndUpdate (<this>: kotlinx.atomicfu.AtomicInt, function: kotlin.Function1<kotlin.Int, kotlin.Int>): kotlin.Int declared in kotlinx.atomicfu' type=kotlin.Int origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=7
            ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Int> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Int
                VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
                    TYPE_ARG T: kotlin.Int
                    ARG expected: CONST Int type=kotlin.Int value=50
                    ARG actual: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (value: kotlin.Int): kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest'
                    WHEN type=kotlin.Int origin=IF
                      BRANCH
                        if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                          ARG arg0: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
                          ARG arg1: CONST Int type=kotlin.Int value=0
                        then: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Int declared in kotlin.Int.Companion' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Int.Companion
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: GET_VAR 'value: kotlin.Int declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest.<anonymous>' type=kotlin.Int origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Int declared in kotlin.Int.Companion' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Int.Companion
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Int declared in kotlinx.atomicfu.AtomicInt' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicInt declared in kotlinx.atomicfu.AtomicIntArray' type=kotlinx.atomicfu.AtomicInt origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-intArr> (): kotlinx.atomicfu.AtomicIntArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicIntArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicIntArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=7
    FUN name:atomicLongArrLoopTest visibility:public modality:FINAL returnType:kotlin.Long
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun <set-value> (value: kotlin.Long): kotlin.Unit declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG value: CONST Long type=kotlin.Long value=0
        CALL 'public final fun loop (<this>: kotlinx.atomicfu.AtomicLong, action: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Long
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: kotlin.Long, update: kotlin.Long): kotlin.Boolean declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                        ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                        ARG index: CONST Int type=kotlin.Int value=0
                      ARG expect: GET_VAR 'value: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrLoopTest.<anonymous>' type=kotlin.Long origin=null
                      ARG update: CALL 'public final fun plus (other: kotlin.Int): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
                        ARG <this>: GET_VAR 'value: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrLoopTest.<anonymous>' type=kotlin.Long origin=null
                        ARG other: CONST Int type=kotlin.Int value=10
                    then: BLOCK type=kotlin.Unit origin=null
                      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
                        TYPE_ARG T: kotlin.Long
                        ARG expected: CALL 'public final fun plus (other: kotlin.Int): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
                          ARG <this>: GET_VAR 'value: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrLoopTest.<anonymous>' type=kotlin.Long origin=null
                          ARG other: CONST Int type=kotlin.Int value=10
                        ARG actual: CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
                      RETURN type=kotlin.Nothing from='public final fun atomicLongArrLoopTest (): kotlin.Long declared in <root>.ArrayLoopTest'
                        CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
    FUN name:atomicLongArrUpdateTest visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=10
          ARG actual: CALL 'public final fun atomicLongArrLoopTest (): kotlin.Long declared in <root>.ArrayLoopTest' type=kotlin.Long origin=null
            ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
        CALL 'public final fun <set-value> (value: kotlin.Long): kotlin.Unit declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=5
          ARG value: CONST Long type=kotlin.Long value=0
        CALL 'public final fun update (<this>: kotlinx.atomicfu.AtomicLong, function: kotlin.Function1<kotlin.Long, kotlin.Long>): kotlin.Unit declared in kotlinx.atomicfu' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=5
          ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Long> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Long
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                VAR name:newValue type:kotlin.Long [val]
                  CALL 'public final fun plus (other: kotlin.Int): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
                    ARG other: CONST Int type=kotlin.Int value=1000
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.Long): kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest'
                  WHEN type=kotlin.Long origin=IF
                    BRANCH
                      if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Long, arg1: kotlin.Long): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                        ARG arg0: GET_VAR 'val newValue: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
                        ARG arg1: CONST Long type=kotlin.Long value=0
                      then: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Long declared in kotlin.Long.Companion' type=kotlin.Long origin=GET_PROPERTY
                        ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Long.Companion
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: GET_VAR 'val newValue: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Long declared in kotlin.Long.Companion' type=kotlin.Long origin=GET_PROPERTY
            ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Long.Companion
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=5
        CALL 'public final fun <set-value> (value: kotlin.Long): kotlin.Unit declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=6
          ARG value: CONST Long type=kotlin.Long value=10
        VAR name:res2 type:kotlin.Long [val]
          CALL 'public final fun updateAndGet (<this>: kotlinx.atomicfu.AtomicLong, function: kotlin.Function1<kotlin.Long, kotlin.Long>): kotlin.Long declared in kotlinx.atomicfu' type=kotlin.Long origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=6
            ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Long> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Long
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.Long): kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest'
                    WHEN type=kotlin.Long origin=IF
                      BRANCH
                        if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Long, arg1: kotlin.Long): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                          ARG arg0: GET_VAR 'cur: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
                          ARG arg1: CONST Long type=kotlin.Long value=0
                        then: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Long declared in kotlin.Long.Companion' type=kotlin.Long origin=GET_PROPERTY
                          ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Long.Companion
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: GET_VAR 'cur: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Long declared in kotlin.Long.Companion' type=kotlin.Long origin=GET_PROPERTY
            ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Long.Companion
          ARG actual: GET_VAR 'val res2: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=kotlin.Long origin=null
        CALL 'public final fun lazySet (value: kotlin.Long): kotlin.Unit declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=7
          ARG value: CONST Long type=kotlin.Long value=50
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=50
          ARG actual: CALL 'public final fun getAndUpdate (<this>: kotlinx.atomicfu.AtomicLong, function: kotlin.Function1<kotlin.Long, kotlin.Long>): kotlin.Long declared in kotlinx.atomicfu' type=kotlin.Long origin=null
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=7
            ARG function: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Long> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Long
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
                BLOCK_BODY
                  CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
                    TYPE_ARG T: kotlin.Long
                    ARG expected: CONST Long type=kotlin.Long value=50
                    ARG actual: GET_VAR 'cur: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.Long): kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest'
                    WHEN type=kotlin.Long origin=IF
                      BRANCH
                        if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Long, arg1: kotlin.Long): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                          ARG arg0: GET_VAR 'cur: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
                          ARG arg1: CONST Long type=kotlin.Long value=0
                        then: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Long declared in kotlin.Long.Companion' type=kotlin.Long origin=GET_PROPERTY
                          ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Long.Companion
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: GET_VAR 'cur: kotlin.Long declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest.<anonymous>' type=kotlin.Long origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CALL 'public final fun <get-MAX_VALUE> (): kotlin.Long declared in kotlin.Long.Companion' type=kotlin.Long origin=GET_PROPERTY
            ARG <this>: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=kotlin.Long.Companion
          ARG actual: CALL 'public final fun <get-value> (): kotlin.Long declared in kotlinx.atomicfu.AtomicLong' type=kotlin.Long origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicLong declared in kotlinx.atomicfu.AtomicLongArray' type=kotlinx.atomicfu.AtomicLong origin=GET_ARRAY_ELEMENT
              ARG <this>: CALL 'private final fun <get-longArr> (): kotlinx.atomicfu.AtomicLongArray declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicLongArray origin=GET_PROPERTY
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicLongArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
              ARG index: CONST Int type=kotlin.Int value=7
    FUN name:atomicRefArrLoopTest visibility:public modality:FINAL returnType:<root>.ArrayLoopTest.Box?
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun <set-value> (value: T of kotlinx.atomicfu.AtomicRef): kotlin.Unit declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Unit origin=EQ
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG value: CONSTRUCTOR_CALL 'public constructor <init> (n: kotlin.Int) declared in <root>.ArrayLoopTest.Box' type=<root>.ArrayLoopTest.Box origin=null
            ARG n: CONST Int type=kotlin.Int value=888
        CALL 'public final fun loop <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.loop>, action: kotlin.Function1<T of kotlinx.atomicfu.loop, kotlin.Unit>): kotlin.Nothing declared in kotlinx.atomicfu' type=kotlin.Nothing origin=null
          TYPE_ARG T: <root>.ArrayLoopTest.Box?
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG action: FUN_EXPR type=kotlin.Function1<<root>.ArrayLoopTest.Box?, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:value index:0 type:<root>.ArrayLoopTest.Box?
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (expect: T of kotlinx.atomicfu.AtomicRef, update: T of kotlinx.atomicfu.AtomicRef): kotlin.Boolean declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Boolean origin=null
                      ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
                        ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
                          ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                        ARG index: CONST Int type=kotlin.Int value=0
                      ARG expect: GET_VAR 'value: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrLoopTest.<anonymous>' type=<root>.ArrayLoopTest.Box? origin=null
                      ARG update: CONSTRUCTOR_CALL 'public constructor <init> (n: kotlin.Int) declared in <root>.ArrayLoopTest.Box' type=<root>.ArrayLoopTest.Box origin=null
                        ARG n: CONST Int type=kotlin.Int value=777
                    then: BLOCK type=kotlin.Unit origin=null
                      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
                        TYPE_ARG T: kotlin.Int
                        ARG expected: CONST Int type=kotlin.Int value=777
                        ARG actual: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=<root>.ArrayLoopTest.Box origin=EXCLEXCL
                            TYPE_ARG T0: <root>.ArrayLoopTest.Box
                            ARG arg0: CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=<root>.ArrayLoopTest.Box? origin=GET_PROPERTY
                              ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
                                ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
                                  ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                                ARG index: CONST Int type=kotlin.Int value=0
                      RETURN type=kotlin.Nothing from='public final fun atomicRefArrLoopTest (): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest'
                        CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=<root>.ArrayLoopTest.Box? origin=GET_PROPERTY
                          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
                            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
                              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrLoopTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                            ARG index: CONST Int type=kotlin.Int value=0
    FUN name:atomicRefArrUpdateTest visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ArrayLoopTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int?
          ARG expected: CONST Int type=kotlin.Int value=777
          ARG actual: BLOCK type=kotlin.Int? origin=SAFE_CALL
            VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:<root>.ArrayLoopTest.Box? [val]
              CALL 'public final fun atomicRefArrLoopTest (): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest' type=<root>.ArrayLoopTest.Box? origin=null
                ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            WHEN type=kotlin.Int? origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  ARG arg0: GET_VAR 'val tmp_1: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest.Box? origin=null
                  ARG arg1: CONST Null type=kotlin.Nothing? value=null
                then: CONST Null type=kotlin.Nothing? value=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
                  ARG <this>: GET_VAR 'val tmp_1: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest.Box? origin=null
        CALL 'public final fun lazySet (value: T of kotlinx.atomicfu.AtomicRef): kotlin.Unit declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG value: CONSTRUCTOR_CALL 'public constructor <init> (n: kotlin.Int) declared in <root>.ArrayLoopTest.Box' type=<root>.ArrayLoopTest.Box origin=null
            ARG n: CONST Int type=kotlin.Int value=5
        CALL 'public final fun update <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.update>, function: kotlin.Function1<T of kotlinx.atomicfu.update, T of kotlinx.atomicfu.update>): kotlin.Unit declared in kotlinx.atomicfu' type=kotlin.Unit origin=null
          TYPE_ARG T: <root>.ArrayLoopTest.Box?
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG function: FUN_EXPR type=kotlin.Function1<<root>.ArrayLoopTest.Box?, <root>.ArrayLoopTest.Box?> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:<root>.ArrayLoopTest.Box?
              VALUE_PARAMETER kind:Regular name:cur index:0 type:<root>.ArrayLoopTest.Box?
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: <root>.ArrayLoopTest.Box?): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest'
                  BLOCK type=<root>.ArrayLoopTest.Box? origin=SAFE_CALL
                    VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:<root>.ArrayLoopTest.Box? [val]
                      GET_VAR 'cur: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest.<anonymous>' type=<root>.ArrayLoopTest.Box? origin=null
                    WHEN type=<root>.ArrayLoopTest.Box? origin=null
                      BRANCH
                        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                          ARG arg0: GET_VAR 'val tmp_2: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest.<anonymous>' type=<root>.ArrayLoopTest.Box? origin=null
                          ARG arg1: CONST Null type=kotlin.Nothing? value=null
                        then: CONST Null type=kotlin.Nothing? value=null
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun let <T, R> (<this>: T of kotlin.let, block: kotlin.Function1<T of kotlin.let, R of kotlin.let>): R of kotlin.let declared in kotlin' type=<root>.ArrayLoopTest.Box origin=null
                          TYPE_ARG T: <root>.ArrayLoopTest.Box
                          TYPE_ARG R: <root>.ArrayLoopTest.Box
                          ARG <this>: GET_VAR 'val tmp_2: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest.<anonymous>' type=<root>.ArrayLoopTest.Box? origin=null
                          ARG block: FUN_EXPR type=kotlin.Function1<<root>.ArrayLoopTest.Box, <root>.ArrayLoopTest.Box> origin=LAMBDA
                            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:<root>.ArrayLoopTest.Box
                              VALUE_PARAMETER kind:Regular name:it index:0 type:<root>.ArrayLoopTest.Box
                              BLOCK_BODY
                                RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: <root>.ArrayLoopTest.Box): <root>.ArrayLoopTest.Box declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest.<anonymous>'
                                  CONSTRUCTOR_CALL 'public constructor <init> (n: kotlin.Int) declared in <root>.ArrayLoopTest.Box' type=<root>.ArrayLoopTest.Box origin=null
                                    ARG n: CALL 'public final fun times (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=MUL
                                      ARG <this>: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
                                        ARG <this>: GET_VAR 'cur: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest.<anonymous>' type=<root>.ArrayLoopTest.Box? origin=null
                                      ARG other: CONST Int type=kotlin.Int value=10
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=<root>.ArrayLoopTest.Box origin=EXCLEXCL
              TYPE_ARG T0: <root>.ArrayLoopTest.Box
              ARG arg0: CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=<root>.ArrayLoopTest.Box? origin=GET_PROPERTY
                ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
                  ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                  ARG index: CONST Int type=kotlin.Int value=0
          ARG actual: CONST Int type=kotlin.Int value=50
        CALL 'public final fun lazySet (value: T of kotlinx.atomicfu.AtomicRef): kotlin.Unit declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG value: CONSTRUCTOR_CALL 'public constructor <init> (n: kotlin.Int) declared in <root>.ArrayLoopTest.Box' type=<root>.ArrayLoopTest.Box origin=null
            ARG n: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=<root>.ArrayLoopTest.Box origin=EXCLEXCL
              TYPE_ARG T0: <root>.ArrayLoopTest.Box
              ARG arg0: CALL 'public final fun updateAndGet <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.updateAndGet>, function: kotlin.Function1<T of kotlinx.atomicfu.updateAndGet, T of kotlinx.atomicfu.updateAndGet>): T of kotlinx.atomicfu.updateAndGet declared in kotlinx.atomicfu' type=<root>.ArrayLoopTest.Box? origin=null
                TYPE_ARG T: <root>.ArrayLoopTest.Box?
                ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
                  ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                  ARG index: CONST Int type=kotlin.Int value=0
                ARG function: FUN_EXPR type=kotlin.Function1<<root>.ArrayLoopTest.Box?, <root>.ArrayLoopTest.Box?> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:<root>.ArrayLoopTest.Box?
                    VALUE_PARAMETER kind:Regular name:cur index:0 type:<root>.ArrayLoopTest.Box?
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: <root>.ArrayLoopTest.Box?): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest'
                        CALL 'private final fun action (cur: <root>.ArrayLoopTest.Box?): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest' type=<root>.ArrayLoopTest.Box? origin=null
                          ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                          ARG cur: GET_VAR 'cur: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest.<anonymous>' type=<root>.ArrayLoopTest.Box? origin=null
          ARG actual: CONST Int type=kotlin.Int value=50
        CALL 'public final fun lazySet (value: T of kotlinx.atomicfu.AtomicRef): kotlin.Unit declared in kotlinx.atomicfu.AtomicRef' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
            ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
            ARG index: CONST Int type=kotlin.Int value=0
          ARG value: CONSTRUCTOR_CALL 'public constructor <init> (n: kotlin.Int) declared in <root>.ArrayLoopTest.Box' type=<root>.ArrayLoopTest.Box origin=null
            ARG n: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=<root>.ArrayLoopTest.Box origin=EXCLEXCL
              TYPE_ARG T0: <root>.ArrayLoopTest.Box
              ARG arg0: CALL 'public final fun getAndUpdate <T> (<this>: kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.getAndUpdate>, function: kotlin.Function1<T of kotlinx.atomicfu.getAndUpdate, T of kotlinx.atomicfu.getAndUpdate>): T of kotlinx.atomicfu.getAndUpdate declared in kotlinx.atomicfu' type=<root>.ArrayLoopTest.Box? origin=null
                TYPE_ARG T: <root>.ArrayLoopTest.Box?
                ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
                  ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                  ARG index: CONST Int type=kotlin.Int value=0
                ARG function: FUN_EXPR type=kotlin.Function1<<root>.ArrayLoopTest.Box?, <root>.ArrayLoopTest.Box?> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:<root>.ArrayLoopTest.Box?
                    VALUE_PARAMETER kind:Regular name:cur index:0 type:<root>.ArrayLoopTest.Box?
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: <root>.ArrayLoopTest.Box?): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest'
                        CALL 'private final fun action (cur: <root>.ArrayLoopTest.Box?): <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest' type=<root>.ArrayLoopTest.Box? origin=null
                          ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                          ARG cur: GET_VAR 'cur: <root>.ArrayLoopTest.Box? declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest.<anonymous>' type=<root>.ArrayLoopTest.Box? origin=null
          ARG actual: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CALL 'public final fun <get-n> (): kotlin.Int declared in <root>.ArrayLoopTest.Box' type=kotlin.Int origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=<root>.ArrayLoopTest.Box origin=EXCLEXCL
              TYPE_ARG T0: <root>.ArrayLoopTest.Box
              ARG arg0: CALL 'public final fun <get-value> (): T of kotlinx.atomicfu.AtomicRef declared in kotlinx.atomicfu.AtomicRef' type=<root>.ArrayLoopTest.Box? origin=GET_PROPERTY
                ARG <this>: CALL 'public final fun get (index: kotlin.Int): kotlinx.atomicfu.AtomicRef<T of kotlinx.atomicfu.AtomicArray?> declared in kotlinx.atomicfu.AtomicArray' type=kotlinx.atomicfu.AtomicRef<<root>.ArrayLoopTest.Box?> origin=GET_ARRAY_ELEMENT
                  ARG <this>: CALL 'private final fun <get-refArr> (): kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> declared in <root>.ArrayLoopTest' type=kotlinx.atomicfu.AtomicArray<<root>.ArrayLoopTest.Box?> origin=GET_PROPERTY
                    ARG <this>: GET_VAR '<this>: <root>.ArrayLoopTest declared in <root>.ArrayLoopTest.atomicRefArrUpdateTest' type=<root>.ArrayLoopTest origin=IMPLICIT_ARGUMENT
                  ARG index: CONST Int type=kotlin.Int value=0
          ARG actual: CONST Int type=kotlin.Int value=50
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.ArrayLoopTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.ArrayLoopTest' type=<root>.ArrayLoopTest origin=null
      CALL 'public final fun atomicIntArrUpdateTest (): kotlin.Unit declared in <root>.ArrayLoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.ArrayLoopTest declared in <root>.box' type=<root>.ArrayLoopTest origin=null
      CALL 'public final fun atomicIntArrUpdateTest (): kotlin.Unit declared in <root>.ArrayLoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.ArrayLoopTest declared in <root>.box' type=<root>.ArrayLoopTest origin=null
      CALL 'public final fun atomicBooleanArrUpdateTest (): kotlin.Unit declared in <root>.ArrayLoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.ArrayLoopTest declared in <root>.box' type=<root>.ArrayLoopTest origin=null
      CALL 'public final fun atomicRefArrUpdateTest (): kotlin.Unit declared in <root>.ArrayLoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.ArrayLoopTest declared in <root>.box' type=<root>.ArrayLoopTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
