FILE: simple.kt
    public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

    }
    public final class C : R|kotlin/Any| {
        public constructor(): R|C| {
            super<R|kotlin/Any|>()
        }

        public final typealias TA = R|A|

        public final fun test(): R|{C.TA=} A| {
            ^test R|/A.A|()
        }

        public open class Nested : R|kotlin/Any| {
            public constructor(): R|C.Nested| {
                super<R|kotlin/Any|>()
            }

        }

        public final typealias NestedTA = R|C.Nested|

        public final class SubNested : R|{C.NestedTA=} C.Nested| {
            public constructor(): R|C.SubNested| {
                super<R|{C.NestedTA=} C.Nested|>()
            }

        }

        public final fun test1(): R|C.Nested| {
            ^test1 R|/C.SubNested.SubNested|()
        }

    }
